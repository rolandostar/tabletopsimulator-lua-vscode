{
  "name": "tabletopsimulator-lua",
  "displayName": "Tabletop Simulator Lua",
  "author": "Rolando Romero <contact@rolandostar.com> (https://rolandostar.com/)",
  "description": "Extension for VSCode to make writing Lua scripts for Tabletop Simulator easier.",
  "version": "2.0.0-alpha.1",
  "publisher": "rolandostar",
  "license": "MIT",
  "engines": {
    "node": ">=12.9.0",
    "vscode": "^1.77.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rolandostar/tabletopsimulator-lua-vscode"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "main": "./out/client.bundle.js",
  "scripts": {
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "lint": "eslint",
    "vscode:prepublish": "webpack --mode production",
    "package": "vsce package",
    "i18n": "typesafe-i18n"
  },
  "extensionDependencies": [
    "draivin.hscopes"
  ],
  "dependencies": {
    "@matanlurey/tts-editor": "github:rolandostar/tts-editor#dist",
    "@vscode/codicons": "^0.0.32",
    "axios": "^1.1.2",
    "glob": "^8.0.3",
    "html-escaper": "^3.0.3",
    "js-yaml": "^4.1.0",
    "luabundle": "^1.6.0",
    "nodejs-file-downloader": "^4.10.2",
    "require-module-from-string": "^1.0.19",
		"vscode-languageclient": "^8.1.0",
		"vscode-languageserver": "^8.1.0",
		"vscode-languageserver-textdocument": "^1.0.8",
    "typesafe-i18n": "^5.24.3"
  },
  "devDependencies": {
    "@types/node": "^18.15.11",
    "@types/vscode": "^1.77.0",
    "@types/webpack-env": "^1.18.0",
    "@typescript-eslint/eslint-plugin": "^5.57.0",
    "@typescript-eslint/parser": "^5.57.0",
    "concurrently": "^8.0.1",
    "copy-webpack-plugin": "^11.0.0",
    "eslint": "^8.37.0",
    "eslint-config-standard-with-typescript": "^34.0.1",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-promise": "^6.1.1",
    "merge-options": "^3.0.4",
    "rimraf": "^4.4.1",
    "terser-webpack-plugin": "^5.3.7",
    "ts-loader": "^9.4.2",
    "tsconfig-paths-webpack-plugin": "^4.0.1",
    "typescript": "^5.0.3",
    "webpack": "^5.77.0",
    "webpack-cli": "^5.0.1"
  },
  "activationEvents": [
    "onWebviewPanel:TTSConsole",
    "workspaceContains:*.lua",
    "workspaceContains:*.tts",
    "workspaceContains:*.ttslua",
    "onLanguage:lua",
    "onCommand:ttslua.openConsole",
    "onCommand:ttslua.getScripts",
    "onCommand:ttslua.saveAndPlay",
    "onCommand:ttslua.installConsole",
    "onCommand:ttslua.addGlobalInclude",
    "onCommand:ttslua.updateCompletionItems",
    "onCommand:ttslua.forceAutocompleteUpdate",
    "onCommand:ttslua.changeWorkDir",
    "onCommand:ttslua.downloadAssets"
  ],
  "contributes": {
    "languages": [
      {
        "id": "tso",
        "aliases": [
          "Tabletop Simulator Object"
        ],
        "extensions": [
          ".tso"
        ],
        "icon": {
          "light": "media/tts.svg",
          "dark": "media/tts.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "tso",
        "scopeName": "source.tso",
        "path": "./syntaxes/tso.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "ttslua.changeObjectView",
        "title": "Toggle TTS view between Lua/XML/Json",
        "icon": {
          "light": "media/arrow-switch_light.svg",
          "dark": "media/arrow-switch.svg"
        }
      },
      {
        "command": "ttslua.updateCompletionItems",
        "title": "Update IntelliSense with latest TTS API",
        "category": "TTS Lua",
        "icon": "$(book)"
      },
      {
        "command": "ttslua.openConsole",
        "title": "Open TTS Console++",
        "category": "TTS Lua",
        "icon": "$(book)"
      },
      {
        "command": "ttslua.getScripts",
        "title": "Get Lua Scripts",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.saveAndPlay",
        "title": "Save And Play",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.installConsole",
        "title": "Install Console++",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.addGlobalInclude",
        "title": "Add Global include folder to workspace",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.forceAutocompleteUpdate",
        "title": "[Debug] Force autocomplete update",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.executeLua",
        "title": "Execute selected Lua",
        "category": "TTS Lua",
        "icon": "$(debug-start)"
      },
      {
        "command": "ttslua.changeWorkDir",
        "title": "Change working directory where scripts will be saved to and loaded from.",
        "category": "TTS Lua"
      },
      {
        "command": "ttslua.downloadAssets",
        "title": "Download assets",
        "category": "TTS Lua"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorHasSelection",
          "command": "ttslua.executeLua",
          "group": "0_Custom"
        }
      ],
      "editor/title": [
        {
          "command": "ttslua.changeObjectView",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "ttslua.openConsole",
        "key": "ctrl+alt+`"
      },
      {
        "command": "ttslua.getScripts",
        "key": "ctrl+alt+l"
      },
      {
        "command": "ttslua.saveAndPlay",
        "key": "ctrl+alt+s"
      },
      {
        "command": "ttslua.executeLua",
        "key": "ctrl+alt+e"
      }
    ],
    "configuration": [
      {
        "order": 10,
        "id": "ttslua.fileManagement",
        "title": "File Management",
        "properties": {
          "ttslua.fileManagement.autoOpen": {
            "description": "Which files should VScode automatically open when receiving them from the game.",
            "type": "string",
            "default": "Global",
            "enum": [
              "All",
              "Global",
              "None"
            ],
            "enumDescriptions": [
              "Open all received files when getting scripts.",
              "Only open global script.",
              "Do not open any file. (Will still show files in explorer panel)"
            ]
          },
          "ttslua.fileManagement.createXML": {
            "title": "Create XML UI file when object sent from Tabletop Simulator",
            "description": "When an individual object is sent from Tabletop Simulator which has no XML UI, generate a blank XML file for it.",
            "type": "boolean",
            "default": false
          },
          "ttslua.fileManagement.includePaths": {
            "title": "Additional paths to search for files",
            "markdownDescription": "Both `~/Documents/Tabletop Simulator` and currently opened Folders in workspace are always included in search path. [Learn More](https://tts-vscode.rolandostar.com/extension/moduleResolution)\n\neg. `C:\\Users\\<YourName>\\MyTTSFiles\\`",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "ttslua.fileManagement.luaSearchPattern": {
            "title": "Pattern used to look for require'd files",
            "markdownDescription": "`?.lua` is always searched for.\n\nDescribed in Lua's [search path patterns](https://www.lua.org/pil/8.1.html).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "?",
              "?.lua"
            ],
            "minItems": 1
          },
          "ttslua.fileManagement.saveName": {
            "title": "How to name saved files",
            "markdownDescription": "When using version control, how should the save file be named.\n\nExtension will always be `.json`",
            "type": "string",
            "default": "savegame"
          }
        }
      },
      {
        "order": 20,
        "id": "ttslua.autocompletion",
        "title": "Autocompletion",
        "properties": {
          "ttslua.autocompletion.luaEnabled": {
            "title": "Enable Lua Autocompletion",
            "description": "Enable autocompletion for Lua files.",
            "type": "boolean",
            "default": "true"
          },
          "ttslua.autocompletion.xmlEnabled": {
            "title": "Enable XML Autocompletion",
            "description": "Enable autocompletion for XML files.",
            "type": "boolean",
            "default": "true"
          },
          "ttslua.autocompletion.coroutineSuffix": {
            "title": "Coroutine Suffix",
            "description": "When automatically creating an internal coroutine function this is appended to the parent function's name.",
            "type": "string",
            "default": "_routine",
            "minLength": 1
          },
          "ttslua.autocompletion.guidSuffix": {
            "title": "GUID Suffix",
            "description": "When guessing the getObjectFromGUID parameter this is appended to the name of the variable being assigned to.",
            "type": "string",
            "default": "_GUID",
            "minLength": 1
          },
          "ttslua.autocompletion.parameterFormat": {
            "description": "How parameters will be formatted in autocomplete suggestions.  Use keywords TYPE and NAME to insert those parameter fields, with the desired casing (i.e. type vs Type vs TYPE).",
            "type": "string",
            "default": "Type_name"
          }
        }
      },
      {
        "order": 30,
        "id": "ttslua.console",
        "title": "Console++",
        "properties": {
          "ttslua.console.fontFamily": {
            "title": "Console++ Font Family",
            "description": "Controls the Console Font Family",
            "type": "string",
            "default": "Amaranth",
            "minLength": 1
          },
          "ttslua.console.fontSize": {
            "title": "Console++ Font Size",
            "description": "Font size for console panel in pixels. Can also be changed with Ctrl+Scroll.",
            "type": "integer",
            "default": 16
          },
          "ttslua.console.inputHeight": {
            "title": "Console++ Input Height",
            "description": "Height in pixels of the command input bar at the bottom.",
            "type": "integer",
            "default": 27
          },
          "ttslua.console.clearOnReload": {
            "title": "Clear on Reload",
            "description": "Enable to clear Console++ history when opening new game or reloading.",
            "type": "boolean",
            "default": false
          },
          "ttslua.console.clearOnFocus": {
            "title": "Reset to caret (>) on input focus",
            "markdownDescription": "Enable to clear the command input bar when using ``double click`` or ``Enter`` to focus it.",
            "type": "boolean",
            "default": false
          },
          "ttslua.console.logSaves": {
            "description": "Enable to log a message to the Console when a save occurs.",
            "type": "boolean",
            "default": true
          }
        }
      },
      {
        "order": 40,
        "id": "ttslua.misc",
        "title": "Miscellaneous",
        "properties": {
          "ttslua.misc.locale": {
            "markdownDescription": "Select the language to use for the extension. [Learn More](http://tts-vscode.rolandostar.com/support/locales)",
            "type": "string",
            "default": "en-US",
            "enum": [
              "en-US",
              "es-MX"
            ]
          },
          "ttslua.misc.disableDirectoryWarning": {
            "markdownDescription": "When enabled, the extension will not show a warning when directories are deteced in the In-Game Files. [Learn More](http://tts-vscode.rolandostar.com/support/dirWarning)",
            "type": "boolean",
            "default": false
          },
          "ttslua.misc.debugSearchPaths": {
            "markdownDescription": "When enabled, the extension will output the paths and patterns it's using to locate includes and requires. Useful for debugging `ModuleResolution` errors.[Learn More](https://tts-vscode.rolandostar.com/support/debuggingModuleResolution)\n\nOpen the Developer Tools to see the output, default hotkey `Ctrl+Shift+I`.",
            "type": "boolean",
            "default": false
          },
          "ttslua.misc.host": {
            "markdownDescription": "The host to use for the extension. [Learn More](http://tts-vscode.rolandostar.com/support/host)",
            "type": "string",
            "default": "localhost",
            "minLength": 1
          }
        }
      }
    ],
    "not-walkthroughs": [
      {
        "id": "ttslua-first-setup",
        "title": "Tabletop Simulator for VSCode",
        "description": "Learn how to get started Scripting with Lua and VSCode",
        "steps": [
          {
            "id": "startGamge",
            "title": "1. Start the Game! 🎯",
            "description": "TTS Lua depends on Tabletop Simulator running, so go ahead, start it up and load an empty save!",
            "media": {
              "image": "media/docs/banner.png",
              "altText": "Banner Image"
            },
            "completionEvents": [
              "onContext:ttsGameDetected"
            ]
          },
          {
            "id": "loadSave",
            "title": "2. Load a Save 📂",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "getScripts",
            "title": "3. Get Scripts ⏬",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "makeChanges",
            "title": "4. Make Changes ⌨️",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "saveAndPlay",
            "title": "5. Save and Play! 💾",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "installConsole",
            "title": "6. Install Console++ 😎👉👉",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "includeConsole",
            "title": "7. Include External Files",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "openConsole",
            "title": "8. Open Console++",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "saveAndPlaywithConsole",
            "title": "Done 🎉",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "markdown": "media/markdown.md"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          }
        ]
      }
    ]
  },
  "qna": "false",
  "icon": "media/marketplace/icon.png",
  "galleryBanner": {
    "color": "#1F1F23",
    "theme": "dark"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/rolandostar"
  },
  "badges": [
    {
      "url": "https://github.com/rolandostar/tabletopsimulator-lua-vscode/actions/workflows/build-docs.yaml/badge.svg?branch=main",
      "href": "https://github.com/rolandostar/tabletopsimulator-lua-vscode/actions/workflows/build-docs.yaml",
      "description": ""
    },
    {
      "url": "https://github.com/rolandostar/tabletopsimulator-lua-vscode/actions/workflows/deploy-to-marketplace.yaml/badge.svg?branch=main",
      "href": "https://github.com/rolandostar/tabletopsimulator-lua-vscode/actions/workflows/deploy-to-marketplace.yaml",
      "description": ""
    },
    {
      "url": "https://badgen.net/badge/uses/TS/blue",
      "href": "https://github.com/rolandostar/tabletopsimulator-lua-vscode",
      "description": ""
    },
    {
      "url": "https://badgen.net/badge/designed in/MS Paint/grey",
      "href": "https://github.com/rolandostar/tabletopsimulator-lua-vscode",
      "description": ""
    },
    {
      "url": "https://badgen.net/badge/made%20with/%E2%9D%A4/red",
      "href": "https://github.com/rolandostar/tabletopsimulator-lua-vscode",
      "description": "<3"
    }
  ],
  "__metadata": {
    "id": "0d2c6449-7895-4837-aad4-bb90deb5b47a",
    "publisherDisplayName": "rolandostar",
    "publisherId": "409bdebf-bb4b-4a76-a60a-8fa2dc343024"
  }
}
